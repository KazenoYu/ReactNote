{"version":3,"sources":["global/constants.jsx","pages/Home/components/Edit.jsx","pages/Home/components/Item.jsx","pages/Home/components/List.jsx","pages/Home/index.jsx","index.jsx"],"names":["API_GET_DATA","concat","Edit","_ref","add","submittingState","_useState","useState","_useState2","Object","slicedToArray","note","setNote","_useState3","_useState4","date","setDate","_useState5","_useState6","time","setTime","console","log","react_default","a","createElement","type","value","onChange","e","target","onClick","current","prevData","id","v4","toConsumableArray","className","Item","deleteData","prev","filter","item","List","listData","map","components_Item","key","_callee","setData","res","_yield$res$json","data","_regeneratorRuntime","wrap","_context","next","fetch","sent","json","stop","_callee2","_context2","method","headers","Content-type","body","JSON","stringify","Home","useRef","useEffect","fetchSetData","then","fetchData","components_Edit","components_List","ReactDOM","render","StrictMode","src_pages_Home","document","getElementById"],"mappings":"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","file":"static/js/main.2b4359f6.chunk.js","sourcesContent":["export const API_HOST = 'http://localhost:3000';\r\nexport const API_GET_DATA = `${API_HOST}/post/1`;\r\n","import React, { useState } from 'react';\r\nimport { v4 } from 'uuid';\r\n\r\nconst Edit = ({ add, submittingState }) => {\r\n  const [note, setNote] = useState('');\r\n  function noteChange(e) {\r\n    setNote(e.target.value);\r\n  }\r\n\r\n  const [date, setDate] = useState('');\r\n  function dateChange(e) {\r\n    setDate(e.target.value);\r\n  }\r\n\r\n  const [time, setTime] = useState('');\r\n  function timeChange(e) {\r\n    setTime(e.target.value);\r\n  }\r\n\r\n  console.log(note, date, time);\r\n\r\n  function addItem() {\r\n    submittingState.current = true;\r\n    add(function (prevData) {\r\n      return [\r\n        {\r\n          id: v4(),\r\n          note,\r\n          date,\r\n          time,\r\n        },\r\n        // ...prevData 為解構的陣列\r\n        ...prevData,\r\n      ];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>備忘錄</h1>\r\n      <p>記事：</p>\r\n      {/* note 影響 value ； onChange 影響 note */}\r\n      <input type=\"text\" value={note} onChange={noteChange}></input>\r\n      <p>日期：</p>\r\n      <input type=\"date\" value={date} onChange={dateChange}></input>\r\n      <p>時間：</p>\r\n      <input type=\"time\" value={time} onChange={timeChange}></input>\r\n      <button onClick={addItem} className=\"add\">\r\n        新增\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\nconst Item = ({ id, note, date, time, deleteData, submittingState }) => {\r\n  function deleteItem() {\r\n    submittingState.current = true;\r\n    deleteData(function (prev) {\r\n      // 不等於這個id就會給你過，都會丟回之前那個array (?) (問題點 item.id !== id )\r\n      return prev.filter((item) => item.id !== id);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <div>\r\n        <p>{note}</p>\r\n        <p>{`${date} ${time}`}</p>\r\n      </div>\r\n      <button onClick={deleteItem} className=\"remove\">\r\n        刪除\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport Item from './Item';\r\n\r\nconst List = ({ listData, deleteData, submittingState }) => {\r\n  return (\r\n    <div className=\"list\">\r\n      {listData.map((item) => {\r\n        const { note, date, time, id } = item;\r\n        // 左邊的 note 是 Item.js 裡的 note\r\n        return (\r\n          <Item\r\n            key={id}\r\n            id={id}\r\n            note={note}\r\n            date={date}\r\n            time={time}\r\n            deleteData={deleteData}\r\n            submittingState={submittingState}\r\n          />\r\n        );\r\n        // <Item key={item} />\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { API_GET_DATA } from '../../global/constants';\r\n\r\nimport Edit from './components/Edit';\r\nimport List from './components/List';\r\nimport './index.css';\r\n\r\n// promise\r\nasync function fetchData(setData) {\r\n  const res = await fetch(API_GET_DATA);\r\n  const { data } = await res.json();\r\n  setData(data);\r\n}\r\n\r\nasync function fetchSetData(data) {\r\n  await fetch(API_GET_DATA, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ data }),\r\n  });\r\n}\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  // submittingState 永遠會維持在最新狀態的一個值\r\n  const submittingState = useRef(false);\r\n\r\n  useEffect(() => {\r\n    // if 不是在提交(送出)資料的狀態，就先return\r\n    if (!submittingState.current) {\r\n      return;\r\n    }\r\n    fetchSetData(data).then((data) => (submittingState.current = false));\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    fetchData(setData);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* Edit / List 都是元件，此處被引入。 */}\r\n      <Edit add={setData} submittingState={submittingState} />\r\n      <List\r\n        listData={data}\r\n        deleteData={setData}\r\n        submittingState={submittingState}\r\n      />\r\n\r\n      {/* {a}\r\n      <button onClick={plus}>加法</button> */}\r\n    </div>\r\n  );\r\n\r\n  // const [a, setA] = useState(100);\r\n  // function plus() {\r\n  //   // setA(a + 200); 點擊\"加法\" +200\r\n  // \t// prev 為前次的值，以下的寫法可以明確\"狀態\"\r\n  //   setA(function (prev) {\r\n  //     return prev + 200;\r\n  //   });\r\n  // }\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './pages/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}